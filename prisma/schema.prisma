datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL_NON_POOLING")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  predictions   Prediction[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Participant {
  id          String @id @default(cuid())
  name        String
  profilePic  String
  gifterResults Result[] @relation("GifterResults")
  gifteeResults Result[] @relation("GifteeResults")
}

model Prediction {
  id                  String @id @default(cuid())
  userId              String
  participantIdGifter String
  participantIdGiftee String
  user                User   @relation(fields: [userId], references: [id])

  @@map("predictions")
}

model Result {
  id           String @id @default(cuid())
  gifterId     String
  gifteeId     String
  gifter       Participant @relation("GifterResults", fields: [gifterId], references: [id])
  giftee       Participant @relation("GifteeResults", fields: [gifteeId], references: [id])

  @@map("results")
}

model CutoffTime {
  id        Int      @id @default(autoincrement())
  datetime  DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("cutoff_time")
}